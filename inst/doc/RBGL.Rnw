%
% NOTE -- ONLY EDIT THE .Rnw FILE!!!  The .tex file is
% likely to be overwritten.
%
%\VignetteIndexEntry{RBGL Overview}
\documentclass[12pt]{article}

\usepackage{amsmath,pstricks}
\usepackage[authoryear,round]{natbib}
\usepackage{hyperref}


\textwidth=6.2in
\textheight=8.5in
%\parskip=.3cm
\oddsidemargin=.1in
\evensidemargin=.1in
\headheight=-.3in

\newcommand{\scscst}{\scriptscriptstyle}
\newcommand{\scst}{\scriptstyle}

%\setkeys{Gin}{width=0.55\textwidth}


\bibliographystyle{plainnat} 
 
\begin{document}

\title{{\it RBGL}: R interface to boost graph library}
\author{VJ Carey {\tt stvjc@channing.harvard.edu}}
\maketitle

\begin{quotation} {\it Summary}.  A very preliminary implementation
of an interface from R to the Boost Graph Library (BGL, an alternative
to STL programming for mathematical graph objects) is presented.
{\it This 2003 update employs the {\em graph} class of Bioconductor.}
\end{quotation}

\section{Working with the Bioconductor {\tt graph} class}
An example object
representing file dependencies is included, as shown
in Figure \ref{fdpic}.  
<<>>=
library(RBGL)
data(FileDep)
print(FileDep)
library(Rgraphviz)
@
\begin{figure}
<<fig=TRUE>>=
plot(FileDep)
@
\caption{File dependency digraph example from Boost library.}
\label{fdpic}
\end{figure}

The {\tt tsort} function will return the indices of vertices
in topological sort order:
<<>>=
ts <- tsort(FileDep)
print(nodes(FileDep)[ts + 1])
@
Note that if the input graph is not a DAG, BGL {\tt topological\_sort}
will check this and throw 'not a dag'.  This is crudely captured
in the interface (a message is written to the console and zeroes are returned).
\begin{verbatim}
#FD2 <- FileDep
# now introduce a cycle
#FD2@edgeL[["bar_cpp"]]$edges <- c(8,1)
#tsort(FD2)
\end{verbatim}

@
\end{document}


